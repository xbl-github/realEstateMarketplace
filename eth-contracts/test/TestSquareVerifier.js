// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let squareVerifier = artifacts.require('Verifier');


// - use the contents from proof.json generated from zokrates steps
const squareProof = require('../../zokrates/code/square/proof-3-9/proof.json');

contract('Test Square Verifier', accounts=> {

    describe('Test verification with correct and incorrect proofs', function()
    {
    
    
        beforeEach(async function() {
        
            contractInstance = await squareVerifier.new({from: accounts[0]});
        })
        // Test verification with correct proof
        it('Test correct proof.', async function() {
            
            let flag =false;
            //console.log("squareProof.input ". squareProof.proof);
            //console.log( " typeof input : ", typeof  squareProof.input);
            try
            {
                flag = await contractInstance.verifyTx.call( 
                                                            squareProof.proof.A, 
                                                            squareProof.proof.A_p,
                                                            squareProof.proof.B,
                                                            squareProof.proof.B_p, 
                                                            squareProof.proof.C, 
                                                            squareProof.proof.C_p,
                                                            squareProof.proof.H,
                                                            squareProof.proof.K,
                                                            squareProof.input,
                                                            //[9,1],
                                                            {from: accounts[0]});
            }catch(e)
            {
                console.log("error from correct proof call ", e);
            }
            console.log("flag should be true ", flag);
            assert.equal(flag, true, "False with correct inputs.");
        
        })
        // Test verification with incorrect proof
        it('Test incorrect proof.', async function() {
        
            let flag = true
            try{
            
                   flag = await contractInstance.verifyTx.call( 
                                                            squareProof.proof.A, 
                                                            squareProof.proof.A_p,
                                                            squareProof.proof.B,
                                                            squareProof.proof.B_p, 
                                                            squareProof.proof.C, 
                                                            squareProof.proof.C_p,
                                                            squareProof.proof.H,
                                                            squareProof.proof.K,
                                                            [8,1],
                                                            {from: accounts[0]});
            }catch(e)
            {
                console.log("error from incorrect proof call: ",e);
            }
                
            console.log("flag should be false ", flag);
            assert.equal(flag, false, "True with incorrect inputs.");

        })
    });
})
    
    
    
